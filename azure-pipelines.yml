trigger:
- master
- azure-pipelines

pool:
 vmImage: 'ubuntu-latest'
 
variables:
  log_to_splunk: true

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'
  
- script: npm install
  displayName: npm install

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'cookie-consent'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'cookie-consent'
    extraProperties: |
        sonar.javascript.lcov.reportPaths=coverage/lcov.info
        sonar.coverage.exclusions=**/*.config.js,**/coverage/**,**/integration-tests/**,**/tests/example/**,**/*.test.*,__mocks__/**,*test-environment.*

- script: npm run build:production
  displayName: 'build'

- script: npm run lint
  displayName: linting

- script: CI=true npm run test
  displayName: testing

- task: dependency-check-build-task@6
  displayName: 'Run OWASP Dependency Check'
  inputs:
    projectName: 'cookie-consent'
    scanPath: '$(Build.SourcesDirectory)'
    format: 'HTML, JUNIT'
    reportsDirectory: '$(System.DefaultWorkingDirectory)/dependency-scan-results'

- task: PublishTestResults@2
  displayName: 'Publish OWASP Dependency Check Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/dependency-scan-results/*junit.xml'
    testRunTitle: 'Dependency check'
    searchFolder: '$(Common.TestResultsDirectory)'

- task: SonarQubeAnalyze@5

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)/dist
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: dist
